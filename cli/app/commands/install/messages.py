path_already_exists_use_force = "Path {path} already exists. Use --force to overwrite."
executing_command = "Executing: {command}"
successfully_cloned = "Successfully cloned {repo} to {path}"
git_clone_failed = "Git clone failed: {error}"
unexpected_error_during_clone = "Unexpected error during clone: {error}"
dry_run_mode = "=== DRY RUN MODE ==="
dry_run_command_would_be_executed = "The following command would be executed:"
dry_run_command = "Command: {command}"
dry_run_repository = "Repository: {repo}"
dry_run_branch = "Branch: {branch}"
dry_run_target_path = "Target path: {path}"
dry_run_force_mode = "Force mode: {force}"
git_not_available = "Git is not available on the system"
git_available = "Git is available on the system"
path_exists_will_overwrite = "Path {path} exists and will be overwritten (force mode)"
path_exists_would_fail = "Path {path} exists - clone would fail without --force"
target_path_not_exists = "Target path {path} does not exist"
end_dry_run = "=== END DRY RUN ==="
cloning_repo_into_path = "Cloning {repo} into {path}"
installing_nixopus = "Installing nixopus"
invalid_repository_url = "Invalid repository URL format"
invalid_target_path = "Invalid target path format"
invalid_branch = "Invalid branch format"
invalid_output_format = "Invalid output format"
invalid_dry_run = "Invalid dry run format"
invalid_force = "Invalid force format"
invalid_verbose = "Invalid verbose format"
invalid_repo = "Invalid repository format"
invalid_path = "Invalid path format"
prerequisites_validation_failed = "Prerequisites validation failed"
failed_to_prepare_target_directory = "Failed to prepare target directory"
successfully_added_ssh_key = "Successfully generated SSH key: {key}"
ssh_key_add_failed = "SSH key generation failed: {error}"
unexpected_error_during_ssh_add = "Unexpected error during SSH key generation: {error}"
dry_run_ssh_key = "SSH key path: {key}"
dry_run_passphrase = "Passphrase: {passphrase}"
adding_ssh_key = "Generating SSH key: {key}"
invalid_ssh_key_path = "Invalid SSH key path format"
invalid_passphrase = "Invalid passphrase format"
ssh_key_not_found = "SSH key not found: {key}"
failed_to_add_ssh_key = "Failed to generate SSH key"
executing_ssh_keygen = "Executing ssh-keygen: {command}"
successfully_generated_ssh_key = "Successfully generated SSH key: {key}"
ssh_keygen_failed = "SSH key generation failed: {error}"
unexpected_error_during_ssh_keygen = "Unexpected error during SSH key generation: {error}"
generating_ssh_key = "Generating SSH key: {key}"
invalid_key_type = "Invalid key type format"
invalid_key_size = "Invalid key size format"
setting_permissions = "Setting proper file permissions"
adding_to_authorized_keys = "Adding public key to authorized_keys"
ssh_directory_created = "Created SSH directory: {dir}"
permissions_set_successfully = "File permissions set successfully"
authorized_keys_updated = "Public key added to authorized_keys"
ssh_key_already_exists = "SSH key already exists: {path}. Use --force to overwrite."
failed_to_add_ssh_key = "Failed to add SSH key to authorized_keys"
failed_to_read_public_key = "Failed to read public key"
failed_to_append_to_authorized_keys = "Failed to append to authorized_keys"
failed_to_add_to_authorized_keys = "Failed to add to authorized_keys: {error}"
unknown_error = "Unknown error"
default_branch = "default"
unsupported_package_manager = "Unsupported package manager: {package_manager}"
no_supported_package_manager = "No supported package manager found"
failed_to_install = "Failed to install {dep}: {error}"
installing_dep = "Installing {dep}"
dry_run_update_cmd = "[DRY RUN] Would run: {cmd}"
dry_run_install_cmd = "[DRY RUN] Would run: {cmd}"
