name: E2E Test Nixopus API

on:
  push:
    branches:
      - "master"
      - "main"
      - "feat/develop"
    paths:
      - "api/**/*.go"
      - "api/**/*.yaml"
      - "api/**/*.yml"
      - "api/**/*.sql"
  pull_request:
    branches:
      - "master"
      - "main"
      - "feat/develop"
    paths:
      - "api/**/*.go"
      - "api/**/*.yaml"
      - "api/**/*.yml"
      - "api/**/*.sql"
  workflow_dispatch:
    inputs:
      branch:
        description: "Custom branch to run the E2E tests on"
        required: true
        default: "main"

jobs:
  e2e-suite:
    runs-on: ubuntu-latest
    services:
      test-db:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: nixopus
          POSTGRES_PASSWORD: nixopus
          POSTGRES_DB: nixopus_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"
          check-latest: true
          cache: true
          cache-dependency-path: api/go.sum

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5433 -U nixopus -d nixopus_test; then
              echo "PostgreSQL is ready"
              exit 0
            fi
            echo "Waiting for PostgreSQL... $i"
            sleep 2
          done
          echo "PostgreSQL failed to start"
          exit 1

      - name: Create .env file
        run: |
          cd api
          cat > .env << EOF
          DB_NAME=nixopus_test
          USERNAME=nixopus
          PASSWORD=nixopus
          HOST_NAME=localhost
          DB_PORT=5433
          SSL_MODE=disable
          PORT=8080
          DOCKER_HOST=unix:///var/run/docker.sock
          JWT_SECRET=test-jwt-secret-key-for-ci
          REFRESH_TOKEN_SECRET=test-refresh-secret-key-for-ci
          ENV=development
          ALLOWED_ORIGIN=http://localhost:3000
          EOF

      - name: Install Air
        run: |
          go install github.com/air-verse/air@latest

      - name: Start API server with Air
        env:
          DB_HOST: localhost
          DB_PORT: 5433
          DB_USER: nixopus
          DB_PASSWORD: nixopus
          DB_NAME: nixopus_test
          PORT: 8080
        run: |
          cd api
          air &
          echo $! > air.pid

      - name: Wait for API server
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8080/api/v1/health; then
              echo "API server is ready"
              exit 0
            fi
            echo "Waiting for API server... $i"
            sleep 2
          done
          echo "API server failed to start"
          exit 1

      - name: Run unit tests
        env:
          DB_HOST: localhost
          DB_PORT: 5433
          DB_USER: nixopus
          DB_PASSWORD: nixopus
          DB_NAME: nixopus_test
        run: |
          cd api && go test -p 1 ./internal/features/... -v -count=1

      - name: Run integration tests
        env:
          DB_HOST: localhost
          DB_PORT: 5433
          DB_USER: nixopus
          DB_PASSWORD: nixopus
          DB_NAME: nixopus_test
        run: |
          cd api && go test -p 1 ./internal/tests/... -v -count=1

      - name: Stop API server
        if: always()
        run: |
          cd api
          if [ -f air.pid ]; then
            kill $(cat air.pid) || true
            rm air.pid
          fi
          lsof -ti:8080 | xargs kill -9 || true
