name: Format Nixopus

on:
  pull_request:
    branches:
      - master
    paths:
      - 'api/**'
      - 'view/**'
      - 'cli/**'
  push:
    branches:
      - master
      - feat/develop
    paths:
      - 'api/**'
      - 'view/**'
      - 'cli/**'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  format-api:
    name: Format API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true
          cache: true
          cache-dependency-path: api/go.sum
      
      - name: Run gofmt
        working-directory: api
        run: |
          echo "Running gofmt..."
          echo "Files before formatting:"
          git status --porcelain
          gofmt -l -w .
          echo "Files after formatting:"
          git status --porcelain
          echo "Git diff:"
          git diff --name-only
      
      - name: Commit API changes
        id: api-commit
        if: github.event_name == 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'style(api): format Go code'
          branch: ${{ github.head_ref }}
          file_pattern: 'api/**/*.go'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          skip_dirty_check: false
          skip_fetch: true
          skip_checkout: true
          disable_globbing: false
      
      - name: API formatting result
        run: |
          if [[ "${{ steps.api-commit.outputs.changes_detected }}" == "true" ]]; then
            echo "API formatting changes committed"
          else
            echo "No API formatting changes needed"
          fi

  format-view:
    name: Format View
    runs-on: ubuntu-latest
    needs: format-api
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Pull latest changes
        run: git pull origin ${{ github.head_ref }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: view/yarn.lock
      
      - name: Install Yarn
        run: npm install -g yarn
      
      - name: Install dependencies
        working-directory: view
        run: yarn install --frozen-lockfile
      
      - name: Run Prettier
        working-directory: view
        run: |
          echo "Running Prettier formatting..."
          echo "Files before formatting:"
          git status --porcelain
          yarn format
          echo "Files after formatting:"
          git status --porcelain
          echo "Git diff:"
          git diff --name-only
      
      - name: Commit View changes
        id: view-commit
        if: github.event_name == 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'style(view): format frontend code'
          branch: ${{ github.head_ref }}
          file_pattern: 'view/**'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          skip_dirty_check: false
          skip_fetch: true
          skip_checkout: true
          disable_globbing: false
      
      - name: View formatting result
        run: |
          if [[ "${{ steps.view-commit.outputs.changes_detected }}" == "true" ]]; then
            echo "View formatting changes committed"
          else
            echo "No View formatting changes needed"
          fi

  format-cli:
    name: Format CLI
    runs-on: ubuntu-latest
    needs: format-view
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Pull latest changes
        run: git pull origin ${{ github.head_ref }}
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Install dependencies
        working-directory: cli
        run: poetry install --with dev --quiet
      
      - name: Run formatting
        working-directory: cli
        run: |
          echo "Running CLI formatting..."
          echo "Files before formatting:"
          git status --porcelain
          make format
          echo "Files after formatting:"
          git status --porcelain
          echo "Git diff:"
          git diff --name-only
      
      - name: Commit CLI changes
        id: cli-commit
        if: github.event_name == 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'style(cli): format Python code'
          branch: ${{ github.head_ref }}
          file_pattern: 'cli/**/*.py'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          skip_dirty_check: false
          skip_fetch: true
          skip_checkout: true
          disable_globbing: false
      
      - name: CLI formatting result
        run: |
          if [[ "${{ steps.cli-commit.outputs.changes_detected }}" == "true" ]]; then
            echo "CLI formatting changes committed"
          else
            echo "No CLI formatting changes needed"
          fi